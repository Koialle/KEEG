
1) Git clone repo avec Git Bash dans : wamp/www/
2) Ajout chemin vers php.exe dans le PATH
3) dans le dossier KEEG/Symfony : "php composer.phar self-update" avec la console windows
4) De la même manière : "php composer.phar install", qui permet d'installer les vendors et ça peut prendre du temps c'est normal. A un moment la console demande certains paramètres, tout laisser par défaut. Pour les changer, ce sera toujours possible de modifier le fichier Symfony/app/config/parameters.yml plus tard.
5) Encore de la même manière "php composer.phar update" qui peut prendre du temps, surtout si xdebug est activé. A un moment il est possible que la console demande un token (il faudra suivre ses instructions : aller sur le site de GitHub, etc etc).
6) Vider le cache si nécessaire : "php app/console cache:clear --env=dev --no-debug" ou "php app/console cache:clear --env=prod --no-debug" selon l'environnement (dev/prod)
7) Aller à l'URL : http://localhost/keeg/symfony/web/app_dev.php/ . C'est l'URL en mode DEV, donc le chargement des pages est plus lent qu'en mode PROD (app.php/)
8) Créer la base de donnée locale vide. Pour cela toujours dans la console Windows au même endroit (wamp/www/keeg/symfony/) : "php app/console doctrine:database:create" qui permet de créer la base.
9) Ensuite "php app/console doctrine:schema:update --dump-sql" qui affichera dans la console les requêtes de création de tables en "attente", correspondant aux entités Doctrine présentes dans le projet mais pas présentes dans la base de données.
10) Exécuter ces requêtes de mise à jour de la base, en utilisant la commande "php app/console doctrine:schema:update --force". Actualiser la page du navigateur.
Voilà comment installer le projet KEEG en 10 points émoticône wink !